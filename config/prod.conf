# XANZHU PRODUCTION SERVER | A1

proxy_cache_path  /Djin/cache levels=1:2 keys_zone=nuxt-cache:25m max_size=1g inactive=60m use_temp_path=off;

map $sent_http_content_type $expires {
    "text/html"                 1h; # set this to your needs
    "text/html; charset=utf-8"  1h; # set this to your needs
    default                     7d; # set this to your needs
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.xanzhu.com;

    # SSL / Certificates
    include Djin/ssl.conf;

    return 301 $scheme://xanzhu.com$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name xanzhu.com;

    # SSL / Certificates
    include Djin/ssl.conf;

    # Security Headers (Experimental)
    include Djin/headers.conf;

    #Prevent unwanted HTTP methods (Experimental)
    if ($request_method !~ ^(GET|HEAD|POST)$ ){
       return 444;
    }

    gzip            on;
    gzip_types      text/plain application/xml text/css application/javascript;
    gzip_min_length 256;

    charset utf-8;

    root /usr/src/app/dist;

    location ~* \.(?:ico|gif|jpe?g|png|woff2?|eot|otf|ttf|svg|js|css)$ {
        expires $expires;
        add_header Pragma public;
        add_header Cache-Control "public";

        try_files $uri $uri/ @proxy;
    }

    location / {
        expires $expires;
        add_header Content-Security-Policy "default-src 'self' 'unsafe-inline';";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN";

        try_files $uri $uri/index.html @proxy; # for generate.subFolders: true
        # try_files $uri $uri.html @proxy; # for generate.subFolders: false
    }

    location @proxy {
        expires $expires;
        add_header Content-Security-Policy "default-src 'self' 'unsafe-inline';";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Cache-Status $upstream_cache_status;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_ignore_headers        Cache-Control;
        proxy_http_version          1.1;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                  http://127.0.0.1:3000; # set the address of the Node.js instance here
        proxy_cache                 nuxt-cache;
        proxy_cache_bypass          $arg_nocache; # probably better to change this
        proxy_cache_valid           200 302  60m; # set this to your needs
        proxy_cache_valid           404      1m;  # set this to your needs
        proxy_cache_lock            on;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_key             $uri$is_args$args;
        proxy_cache_purge           PURGE from 127.0.0.1;
    }
}

# Default server with unknown host protection
server {
    listen  443 ssl http2 default_server;
    listen  [::]:443 ssl http2 default_server;

    server_name _;

    # SSL / Certificates
    include Djin/ssl.conf;

    return 444;
}